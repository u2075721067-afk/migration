version: '3.8'

services:
  mova-api:
    build:
      context: ../..
      dockerfile: infra/docker/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=debug
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=mova
      - DB_USER=mova
      - DB_PASSWORD=mova_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - postgres
      - redis
    volumes:
      - ../../schemas:/app/schemas:ro
    networks:
      - mova-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=mova
      - POSTGRES_USER=mova
      - POSTGRES_PASSWORD=mova_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - mova-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - mova-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - mova-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - mova-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  mova-network:
    driver: bridge
