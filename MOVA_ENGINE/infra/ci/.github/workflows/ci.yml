name: MOVA Engine CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  GO_VERSION: '1.21'
  NODE_VERSION: '18'

jobs:
  test-go:
    name: Test Go Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: |
        cd MOVA_ENGINE
        go mod download

    - name: Run tests
      run: |
        cd MOVA_ENGINE
        go test -v -race -coverprofile=coverage.out ./...

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./MOVA_ENGINE/coverage.out
        flags: go
        name: go-coverage

  test-typescript:
    name: Test TypeScript SDK
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: MOVA_ENGINE/sdk/typescript/package-lock.json

    - name: Install dependencies
      run: |
        cd MOVA_ENGINE/sdk/typescript
        npm ci

    - name: Run tests
      run: |
        cd MOVA_ENGINE/sdk/typescript
        npm test

    - name: Build
      run: |
        cd MOVA_ENGINE/sdk/typescript
        npm run build

  test-python:
    name: Test Python SDK
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.10, 3.11]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        cd MOVA_ENGINE/sdk/python
        pip install -e ".[dev]"

    - name: Run tests
      run: |
        cd MOVA_ENGINE/sdk/python
        pytest --cov=mova_engine_sdk --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./MOVA_ENGINE/sdk/python/coverage.xml
        flags: python-${{ matrix.python-version }}
        name: python-coverage-${{ matrix.python-version }}

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Go linting tools
      run: |
        go install golang.org/x/lint/golint@latest
        go install honnef.co/go/tools/cmd/staticcheck@latest

    - name: Install Node.js linting tools
      run: |
        cd MOVA_ENGINE/sdk/typescript
        npm ci

    - name: Install Python linting tools
      run: |
        cd MOVA_ENGINE/sdk/python
        pip install -e ".[dev]"

    - name: Lint Go code
      run: |
        cd MOVA_ENGINE
        golint ./...
        staticcheck ./...

    - name: Lint TypeScript code
      run: |
        cd MOVA_ENGINE/sdk/typescript
        npm run lint

    - name: Lint Python code
      run: |
        cd MOVA_ENGINE/sdk/python
        flake8 mova_engine_sdk
        black --check mova_engine_sdk

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [test-go, test-typescript, test-python, lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./MOVA_ENGINE
        file: ./MOVA_ENGINE/infra/docker/Dockerfile
        push: false
        tags: mova-engine:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
